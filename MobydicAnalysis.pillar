! About Mobidyc


!! Link and Various Information 

- https://github.com/Ducasse/Mobydic.git
- http://mobidyc.cnrs.fr/index.php?title=Telecharger


!! Analysis of the system : a Package View

- MBD_System :
Contient toutes les extensions faites par Mobidyc.

- MBX_Statistiques :
Contains classes for Propability distribution.
Don't has dependences from other Mobidyc's packages. Used by the package MBD_Fonction and MBD_Statistiques.
Basically one single hierarchy, simple classes, Good candidates for migration.
Comment wonders where this package come from and classes look like already existing.
Bernoulli, Binomial, Geometrical and SampleSpace have a class protocol called "Exemple"

- MBX_TreeBrowser :
Comments say it used to display hierarchies.
Don't have dependances from other Mobidyc's packages but some superclass in the UI package.
Is used by Sc_ArbreEntities (package MBD_PrimitivesInterfaces).
TreeBrowser Contains examples (class methods).

- MBD_Kernel :
redefinit les methodes des dictionnaires, redefinit des listes, définit les classes autour de Parametre, de Coordonnee, définit une structure de donnée en 3 dimensions.
Le commentaire de la classe ObjetAvecRessources, elle permet la compatibilité avec des versions plus anciennes et les sauvegardes au format BOSS.
La classe ChroniqueText hérite d'une classe de UI (ApplicationModel, extension de cette classe dans MBD_System +). Il y a 2 références vers ChroniqueText depuis MobidycMain (package MBD_Mobidyc).
Some classes have en empty protocol called "(generate FastMobidyc)"
NDico contains a protocole called "testing".
NList contains a method "testAjout".
NParametre contains a protocol called "tests".
Object contains a class protocole called "testing".
SerieXY contains a protocol called "test".

- MBD_Statistiques * :
/!\ Don't make a confusion with MBX_Statistiques
Dépend de MBX-Statistiques. Hérite de classes de MBD_Functions et MBD_System.
Très nombreuses références à Tirage, dans des packages différents.
Tirage contient un exemple (methode de classe). Une méthode de class appelée "test" : Tirage > poisson.

- MBD_Utilitaires :
contains classes that managed
 * online help
 * calendar of world (a date is a step of time in the simulation)
 * a windows for logs
 * languages of interface
 * an editor/reader of TextFiles containning classes
 * a class "Utilitaires" containning methods about
   ** loading of MB (/!\ manipule la variable $VISUALWORKS)
   ** warnings
   ** project hierarchie / refactoring / 
   ** ...

- MBD_Variables :

- MBD_Primitives :
contains a class "TantQue".
Some classes have en empty protocol called "(generate FastMobidyc)".
In TrierSurValeur, protocol acces, method lesConditions, a comment say that the XML don't work well, and when it will that ressources must disapear.
Conditions contains a protocol called "tests".

- MBD_Taches :
contains classes about changes of entity in the simulation like die, reproduce, ...
Make the link with MBD_Mathscript.

- MBD_Functions :
uses MBX-Statistiques.
contains basicals mathematiques functions.
A search is launched on these functions when a task is generated to know if it's a existing function or an subclass of TacheGeneree.

- MBD_Agent :
contains classes which define entities.
Must add task at entities.

- MBD_Espace :
contains classes about drawing simulated worlds

- MBD_PrimitivesInterfaces :
Utilise MBD_TreeBrowser

- MBD_Interface :
contains classes about menu for worlds' creation.
The most parts of its methods have been generated by UIDefiner (in the package UIPainter)

- MBD_Mobydic :

- MBD_AtollCompilateur :

- MBD_MathScript :

- MBD_ProjectBrowser :

- MBD_TableauDeBord :

- MBD_Xml + :


In subpackageB _Batch

- MBD_GenerateurExperiences :

- MBD_Batch :


Out of Mobidyc's Bundle

- MBD_FastMobidyc + :

- MBD_ParticlesSwarm + :


!! Detail views ***************************************************

Dead Code

#AgentCell
#batchOrOneSimulation
#Condition2
#ConditionEtendue
#dicoActions
#ElementNListe
#FastMobidyc
#fastMobidyc
#FastWorld
#limit
#listeMathXML
#maListe
#meanParamDev_mdAdf
#moule
#my_number
#nomFB
#old2new
#ParamDev_mdN1N3
#ParamDev_vdN1N3
#pointeurArbre
#primitive
#PrimitiveAppartient
#PrimitiveEt
#PrimitiveOu
#PrimitiveSiAlorsSinon
#sc_selectAttributPourMoi
#sddParamDev_vdAdf
#texte
#totalOrPartialCompilation
#tt -> some of "t1" exist


- MBD_System :
Can't be openned for the moment.

- MBX_Statistiques :
* Bernoulli, Binomial, Geometrical, SampleSpace are only referenced by methods in protocols Example.
* ContinuousProbability, DiscreteProbability, Exponential, Gamma, ProbabilityDistribution are not referenced.
* Normal is referenced by ChartScaleSpecModel (in a package of the system called BGOK * +), seems to be a string.
* ProbabilitySistribution, the method new make "^ self basicNew", and distribuion: and inverseDistribution make "self subclassResponsibility".
Comments of distribution: in the class ContinuousProbability describe it as "slow and dirty".
* Uniform is referenced by Normal

- MBX_TreeBrowser :
Some methods has been generated by UIDefiner.
new in TreeBrowserSpec (subclass of Obeject) make "^ super new init"

- MBD_Kernel :
Some methods has been generated by UIDefiner.
* Binome, estMultipleDe can have some troubles with float.
* Capteur, in cible: comment say it exits for compatibility but should be removed, in attribut and attributDe: comment say it can have wrong dependancies (not sure if "dependancies" is the programming word or a Mobidyc word), contains a protocole called "generation de code" and one called "XML", comment in ailleursRapide say it shouldn't use too much beacause it's costly but could be improved, new and new: use "^ super new [...]", comments in menuDesPaths say it make a bug with one way to use it, listeDesPossesseurs contains an "halt".
* Coordonnee, comment in getDescription seems to be used for compatibility with XML.
* CoordonneeX and CoordonneeY have similar code.
* CoupleXY, class method abscisse:ordonnee: calls super new initialiser:ordonnee: that i haven't see in any class of its hirarchiy (in Mobidyc).
* DicoHA, overrides at: to add a feature but has a method simpleAt: which make super at:, overrides select: .
* DicoOrdonne and DicoOrdonneB, these classes have lot of code similar, removeKey: make "self retirer:" (alias), new make "^ super new initialiser".
* MBCondition, new and new: make "^super new initialiser [...]",  contains a protocol called "XML".
* Model don't have methods.
* NDico, new make "^super new initialiser2", keys keyAsList and keyAsNList have similar code, majSize is empty.
* NList, have methods whith a 2 in their name (like init2 limit2 add2: ...), index2Of: indexOfold: and intIndexOf: have similar code, overrides size but ssize make "^super size", collection make "^self", addLast: is an alias of add:.
* NListCompacte (respire Stef), compacte copy that list except the elements that return true whith the methods eliminerElement: (comments indicate to override it in a subclass to change the condition on elements (for example to erase element which have been killed by a predator), by default erase element that are nil), removing methods replace the element by nil, do: has been overide to test if an element is nil before iterate on it, class and doesNotUnderstand have been override, have methods with 2 in their name (like NList).
* NParametre, tableauDesValeurs: contains an halt, there are protocols "As yet unclassified" and "XML", Somes methods have a number in their names, the methods "fromString..." seems have similar code, the methods "PlaceNParamMeme..." seems have similar code,  the methods "printLString..." seems have similar code be alias and contains halt, prtotocol "mise a jour" seems work like a stack,
* Object, initialiser and initialize return self, there is a protocol "XML", the most part of instance methods called the class method with the same name, reza (class) make an halt
* ObjetAvecRessources, new make "^super new initialiser"
* ObjetParametrable, initialiser make "super initialiser", methods of parametrage seems to have similar code, there is a protocol "XML".
* Parametre, comment in initialiserLocal say it's for compatibility with NParametre, strange comment about XML in valeur: , there is a protocol "XML",
* ParametreDependant, new make "^super new initialiser", there is a protocol "XML" (class and instance), comment in nomRessourceInterface say it ask at the manager its class name, "dependanceSeule" and "valeurFoisDependance" seems to have similar code.
* ProtoParametre, new make "^super new initialiser", "valeur..." make "^self subclassResponsibility", comment in "valeurSD..." say it's for compatibility with ParametreDependant, methods of protocol copier have similar code,
*** Somes classes have the same method displayString (same code)
* SerieXY, new make "^super new init", methods in protocols "initialisation" and "acces" have similar code, comment in unite say it's for compatibility with Parametre, comments in methods of actions say it's for compatibility with old models, copy2NParam is an alias of copy for compatibility with parametre, there is a protocol "XML".

- MBD_Statistiques * :
* AleaGamma, comments say it works with MathScript only.

- MBD_Utilitaires :

- MBD_Variables :
* GestionnaireDesVariables, coefU2S (instance) contains contradictory comments, coefValide contains an "halt", listeDesVar... and listeNomsVar... contain redondant code, there is a protocol called "recompiled from Undeclared", new make "^ super new init",  contains a protocol called "XML".
* SubInterfaceVarQual, SubInterfaceVarQuant and TypeDeVariable, new make "^ super new init".
* TypeDeVariable, estQuantitatif and estQualitatif have redondant code.

- MBD_Primitives :
*** Most part of classes (ArgumentDePrimitives Calcul CetteCellule Compter Conditions DeAgentsVersValeurs DeplacementVersCellule DeroulerUneListe FinDeroulerUneListe FinTantQue ...) contain a protocol "XML".
* ArgumentDePrimitives, comments in nom indicate that the first index of tables is 1.
* DeAgentsVersValeurs, comments in nb_pdt and nb_val say it change the name because of '_' (some other class test if a name contains '_' to know what type of name is), executer...: contains an halt and a warning not yet implemented, .
* DeplacementVersCellule, comments say executer...: is slow for long range, there are executer: executerNew: and executerOld:
*** Compter DeroulerUneListe HistoriqueAttribut ModifierAttribut_Primitive DeplacementVersCellule DeAgentsVersValeurs DeCellulesVersAgents Primitive ... contain a method called "lienEntreeSortie" "lienDimEntreeSortie" or "lienClassEntreeSortie" (there are comment about it in Primitive)
* ModifierAttribut_Primitive, have 3 methods "exe...:" .
* Primitive, executer: have strange comment about the method executer: of a primitive, the class method in the protocol creation use methods like defineClass: or parcelNamed:
* SauverValeursDansAttribut, executer contains some "self halt" inside blocks.
* SelectionDesAgents, executer contains "self halt" with a comment "sert encore ?" and executer:  contains "self tst" with the same comment (and another comment about a problem).
*** Some classes make calcul about distance (DeplacementVersCellule SelectionFinale ...)
* SousSelection, nombre: contains "self tst", contains 2 methods executer..:
* TrierSurNom, contains 2 methods executer..:
* TrierSurValeur, in lesConditions a comment say that the XML don't work well and when it will that ressources must disapear, contains 2 methods executer..: .
* Tuer,  contains 2 methods executer..:

- MBD_Taches :
*** Most part of classes contain a protocol "XML".
* Batch, getEstCeLeMomentTxt contains "self tst" in a block with comment "à faire", estCeLeMoment contains "self halt" in a block, new make "^ super new initialiser".
* Compteur, new make "^ super new initialiser", in protocol acces the ressource seems associated at an index of a table (same in Metamorphose).
* Deplacement, comments say executer...: is slow for long range.
* IncrementerUneFonction Integrateur, initialiser make "^ super initialiser".
* InterfaceSupprimerTache, aspect was generated by UIDefiner.
* MathScipt, comments in copy say it produce the XML then change the name and compil it to make the copy.
* MathScriptBuilder, overides the method superClasse to return MathScript.
* ModifierAttribut, comment in nomressourceInterface say it's temporary.
* Mourrir, listeDesConditions contains "self halt"
* Predation, chasseur contains "self halt" in a block and a comment say a random on a list could be done differently, coment in executer say it could have a problem with dependances
* Tache, comments say "locale" means owned by a cell
* TacheGenere, comment say initialiserAction is for compatibility with others tasks, codeAEteModife comment are stranges and say it's for compatibility with old models, executer contains "self halt" with the comment "ne sert plus".
* TacheLocale, initialiser make "^ super initialiser:...".
* Vieillir, some methods are prefixed by "xml",

- MBD_Functions :

- MBD_Agent :

- MBD_Espace :

- MBD_PrimitivesInterfaces :

- MBD_Interface :
The most parts of its methods have been generated by UIDefiner (in the package UIPainter)

- MBD_Mobydic :

- MBD_AtollCompilateur :

- MBD_MathScript :

- MBD_ProjectBrowser :

- MBD_TableauDeBord :

- MBD_Xml + :


In subpackageB _Batch

- MBD_GenerateurExperiences :

- MBD_Batch :


Out of Mobidyc's Bundle

- MBD_FastMobidyc + :

- MBD_ParticlesSwarm + :


!! Other ***************************************************

* Comments speak about a mode synchronous or not.
* Lot of things are done using string (in return) which are parsed.
